#pragma once

#include <inttypes.h>
#include <unordered_map>

namespace KR580
{
	enum class Opcode : uint8_t
	{
		ADD_A = 0x87,
		ADD_B = 0x80,
		ADD_C = 0x81,
		ADD_D = 0x82,
		ADD_E = 0x83,
		ADD_H = 0x84,
		ADD_L = 0x85,
		ADD_M = 0x86,
		ADI_d8 = 0xC6,
		ADC_A = 0x8F,
		ADC_B = 0x88,
		ADC_C = 0x89,
		ADC_D = 0x8A,
		ADC_E = 0x8B,
		ADC_H = 0x8C,
		ADC_L = 0x8D,
		ADC_M = 0x8E,
		ACI_d8 = 0xCE,
		ANA_A = 0xA7,
		ANA_B = 0xA0,
		ANA_C = 0xA1,
		ANA_D = 0xA2,
		ANA_E = 0xA3,
		ANA_H = 0xA4,
		ANA_L = 0xA5,
		ANA_M = 0xA6,
		ANI_d8 = 0xE6,
		CALL_a16 = 0xCD,
		CZ_a16 = 0xCC,
		CNZ_a16 = 0xC4,
		CP_a16 = 0xF4,
		CM_a16 = 0xFC,
		CC_a16 = 0xDC,
		CNC_a16 = 0xD4,
		CPE_a16 = 0xEC,
		CPO_a16 = 0xE4,
		CMA = 0x2F,
		CMC = 0x3F,
		CMP_A = 0xBF,
		CMP_B = 0xB8,
		CMP_C = 0xB9,
		CMP_D = 0xBA,
		CMP_E = 0xBB,
		CMP_H = 0xBC,
		CMP_L = 0xBD,
		CMP_M = 0xBE,
		CPI_d8 = 0xFE,
		DAA = 0x27,
		DAD_B = 0x09,
		DAD_D = 0x19,
		DAD_H = 0x29,
		DAD_SP = 0x39,
		DCR_A = 0x3D,
		DCR_B = 0x05,
		DCR_C = 0x0D,
		DCR_D = 0x15,
		DCR_E = 0x1D,
		DCR_H = 0x25,
		DCR_L = 0x2D,
		DCR_M = 0x35,
		DCX_B = 0x0B,
		DCX_D = 0x1B,
		DCX_H = 0x2B,
		DCX_SP = 0x3B,
		DI = 0xF3,
		EI = 0xFB,
		HLT = 0x76,
		IN_pp = 0xDB,
		INR_A = 0x3C,
		INR_B = 0x04,
		INR_C = 0x0C,
		INR_D = 0x14,
		INR_E = 0x1C,
		INR_H = 0x24,
		INR_L = 0x2C,
		INR_M = 0x34,
		INX_B = 0x03,
		INX_D = 0x13,
		INX_H = 0x23,
		INX_SP = 0x33,
		JMP_a16 = 0xC3,
		JZ_a16 = 0xCA,
		JNZ_a16 = 0xC2,
		JP_a16 = 0xF2,
		JM_a16 = 0xFA,
		JC_a16 = 0xDA,
		JNC_a16 = 0xD2,
		JPE_a16 = 0xEA,
		JPO_a16 = 0xE2,
		LDA_a16 = 0x3A,
		LDAX_B = 0x0A,
		LDAX_D = 0x1A,
		LHLD_a16 = 0x2A,
		LXI_B_d16 = 0x01,
		LXI_D_d16 = 0x11,
		LXI_H_d16 = 0x21,
		LXI_SP_d16 = 0x31,
		MOV_A_A = 0x7F,
		MOV_A_B = 0x78,
		MOV_A_C = 0x79,
		MOV_A_D = 0x7A,
		MOV_A_E = 0x7B,
		MOV_A_H = 0x7C,
		MOV_A_L = 0x7D,
		MOV_A_M = 0x7E,
		MOV_B_A = 0x47,
		MOV_B_B = 0x40,
		MOV_B_C = 0x41,
		MOV_B_D = 0x42,
		MOV_B_E = 0x43,
		MOV_B_H = 0x44,
		MOV_B_L = 0x45,
		MOV_B_M = 0x46,
		MOV_C_A = 0x4F,
		MOV_C_B = 0x48,
		MOV_C_C = 0x49,
		MOV_C_D = 0x4A,
		MOV_C_E = 0x4B,
		MOV_C_H = 0x4C,
		MOV_C_L = 0x4D,
		MOV_C_M = 0x4E,
		MOV_D_A = 0x57,
		MOV_D_B = 0x50,
		MOV_D_C = 0x51,
		MOV_D_D = 0x52,
		MOV_D_E = 0x53,
		MOV_D_H = 0x54,
		MOV_D_L = 0x55,
		MOV_D_M = 0x56,
		MOV_E_A = 0x5F,
		MOV_E_B = 0x58,
		MOV_E_C = 0x59,
		MOV_E_D = 0x5A,
		MOV_E_E = 0x5B,
		MOV_E_H = 0x5C,
		MOV_E_L = 0x5D,
		MOV_E_M = 0x5E,
		MOV_H_A = 0x67,
		MOV_H_B = 0x60,
		MOV_H_C = 0x61,
		MOV_H_D = 0x62,
		MOV_H_E = 0x63,
		MOV_H_H = 0x64,
		MOV_H_L = 0x65,
		MOV_H_M = 0x66,
		MOV_L_A = 0x6F,
		MOV_L_B = 0x68,
		MOV_L_C = 0x69,
		MOV_L_D = 0x6A,
		MOV_L_E = 0x6B,
		MOV_L_H = 0x6C,
		MOV_L_L = 0x6D,
		MOV_L_M = 0x6E,
		MOV_M_A = 0x77,
		MOV_M_B = 0x70,
		MOV_M_C = 0x71,
		MOV_M_D = 0x72,
		MOV_M_E = 0x73,
		MOV_M_H = 0x74,
		MOV_M_L = 0x75,
		MVI_A_d8 = 0x3E,
		MVI_B_d8 = 0x06,
		MVI_C_d8 = 0x0E,
		MVI_D_d8 = 0x16,
		MVI_E_d8 = 0x1E,
		MVI_H_d8 = 0x26,
		MVI_L_d8 = 0x2E,
		MVI_M_d8 = 0x36,
		NOP = 0x00,
		ORA_A = 0xB7,
		ORA_B = 0xB0,
		ORA_C = 0xB1,
		ORA_D = 0xB2,
		ORA_E = 0xB3,
		ORA_H = 0xB4,
		ORA_L = 0xB5,
		ORA_M = 0xB6,
		ORI_d8 = 0xF6,
		OUT_pp = 0xD3,
		PCHL = 0xE9,
		POP_B = 0xC1,
		POP_D = 0xD1,
		POP_H = 0xE1,
		POP_PSW = 0xF1,
		PUSH_B = 0xC5,
		PUSH_D = 0xD5,
		PUSH_H = 0xE5,
		PUSH_PSW = 0xF5,
		RAL = 0x17,
		RAR = 0x1F,
		RLC = 0x07,
		RRC = 0x0F,
		RIM = 0x20,
		RET = 0xC9,
		RZ = 0xC8,
		RNZ = 0xC0,
		RP = 0xF0,
		RM = 0xF8,
		RC = 0xD8,
		RNC = 0xD0,
		RPE = 0xE8,
		RPO = 0xE0,
		RST_0 = 0xC7,
		RST_1 = 0xCF,
		RST_2 = 0xD7,
		RST_3 = 0xDF,
		RST_4 = 0xE7,
		RST_5 = 0xEF,
		RST_6 = 0xF7,
		RST_7 = 0xFF,
		SIM = 0x30,
		SPHL = 0xF9,
		SHLD_a16 = 0x22,
		STA_a16 = 0x32,
		STAX_B = 0x02,
		STAX_D = 0x12,
		STC = 0x37,
		SUB_A = 0x97,
		SUB_B = 0x90,
		SUB_C = 0x91,
		SUB_D = 0x92,
		SUB_E = 0x93,
		SUB_H = 0x94,
		SUB_L = 0x95,
		SUB_M = 0x96,
		SUI_d8 = 0xD6,
		SBB_A = 0x9F,
		SBB_B = 0x98,
		SBB_C = 0x99,
		SBB_D = 0x9A,
		SBB_E = 0x9B,
		SBB_H = 0x9C,
		SBB_L = 0x9D,
		SBB_M = 0x9E,
		SBI_d8 = 0xDE,
		XCHG = 0xEB,
		XTHL = 0xE3,
		XRA_A = 0xAF,
		XRA_B = 0xA8,
		XRA_C = 0xA9,
		XRA_D = 0xAA,
		XRA_E = 0xAB,
		XRA_H = 0xAC,
		XRA_L = 0xAD,
		XRA_M = 0xAE,
		XRI_d8 = 0xEE,
	};

	typedef struct
	{
		size_t Length;
		const char* Mnemonic;
	} OpcodeInfo_t;

	static std::unordered_map<Opcode, OpcodeInfo_t> OpcodeInfo = {
		{ Opcode::ADD_A, { 1, "ADD A" } },
		{ Opcode::ADD_B, { 1, "ADD B" } },
		{ Opcode::ADD_C, { 1, "ADD C" } },
		{ Opcode::ADD_D, { 1, "ADD D" } },
		{ Opcode::ADD_E, { 1, "ADD E" } },
		{ Opcode::ADD_H, { 1, "ADD H" } },
		{ Opcode::ADD_L, { 1, "ADD L" } },
		{ Opcode::ADD_M, { 1, "ADD M" } },
		{ Opcode::ADI_d8, { 2, "ADI d8" } },
		{ Opcode::ADC_A, { 1, "ADC A" } },
		{ Opcode::ADC_B, { 1, "ADC B" } },
		{ Opcode::ADC_C, { 1, "ADC C" } },
		{ Opcode::ADC_D, { 1, "ADC D" } },
		{ Opcode::ADC_E, { 1, "ADC E" } },
		{ Opcode::ADC_H, { 1, "ADC H" } },
		{ Opcode::ADC_L, { 1, "ADC L" } },
		{ Opcode::ADC_M, { 1, "ADC M" } },
		{ Opcode::ACI_d8, { 2, "ACI d8" } },
		{ Opcode::ANA_A, { 1, "ANA A" } },
		{ Opcode::ANA_B, { 1, "ANA B" } },
		{ Opcode::ANA_C, { 1, "ANA C" } },
		{ Opcode::ANA_D, { 1, "ANA D" } },
		{ Opcode::ANA_E, { 1, "ANA E" } },
		{ Opcode::ANA_H, { 1, "ANA H" } },
		{ Opcode::ANA_L, { 1, "ANA L" } },
		{ Opcode::ANA_M, { 1, "ANA M" } },
		{ Opcode::ANI_d8, { 2, "ANI d8" } },
		{ Opcode::CALL_a16, { 3, "CALL a16" } },
		{ Opcode::CZ_a16, { 3, "CZ a16" } },
		{ Opcode::CNZ_a16, { 3, "CNZ a16" } },
		{ Opcode::CP_a16, { 3, "CP a16" } },
		{ Opcode::CM_a16, { 3, "CM a16" } },
		{ Opcode::CC_a16, { 3, "CC a16" } },
		{ Opcode::CNC_a16, { 3, "CNC a16" } },
		{ Opcode::CPE_a16, { 3, "CPE a16" } },
		{ Opcode::CPO_a16, { 3, "CPO a16" } },
		{ Opcode::CMA, { 1, "CMA" } },
		{ Opcode::CMC, { 1, "CMC" } },
		{ Opcode::CMP_A, { 1, "CMP A" } },
		{ Opcode::CMP_B, { 1, "CMP B" } },
		{ Opcode::CMP_C, { 1, "CMP C" } },
		{ Opcode::CMP_D, { 1, "CMP D" } },
		{ Opcode::CMP_E, { 1, "CMP E" } },
		{ Opcode::CMP_H, { 1, "CMP H" } },
		{ Opcode::CMP_L, { 1, "CMP L" } },
		{ Opcode::CMP_M, { 1, "CMP M" } },
		{ Opcode::CPI_d8, { 2, "CPI d8" } },
		{ Opcode::DAA, { 1, "DAA" } },
		{ Opcode::DAD_B, { 1, "DAD B" } },
		{ Opcode::DAD_D, { 1, "DAD D" } },
		{ Opcode::DAD_H, { 1, "DAD H" } },
		{ Opcode::DAD_SP, { 1, "DAD SP" } },
		{ Opcode::DCR_A, { 1, "DCR A" } },
		{ Opcode::DCR_B, { 1, "DCR B" } },
		{ Opcode::DCR_C, { 1, "DCR C" } },
		{ Opcode::DCR_D, { 1, "DCR D" } },
		{ Opcode::DCR_E, { 1, "DCR E" } },
		{ Opcode::DCR_H, { 1, "DCR H" } },
		{ Opcode::DCR_L, { 1, "DCR L" } },
		{ Opcode::DCR_M, { 1, "DCR M" } },
		{ Opcode::DCX_B, { 1, "DCX B" } },
		{ Opcode::DCX_D, { 1, "DCX D" } },
		{ Opcode::DCX_H, { 1, "DCX H" } },
		{ Opcode::DCX_SP, { 1, "DCX SP" } },
		{ Opcode::DI, { 1, "DI" } },
		{ Opcode::EI, { 1, "EI" } },
		{ Opcode::HLT, { 1, "HLT" } },
		{ Opcode::IN_pp, { 2, "IN pp" } },
		{ Opcode::INR_A, { 1, "INR A" } },
		{ Opcode::INR_B, { 1, "INR B" } },
		{ Opcode::INR_C, { 1, "INR C" } },
		{ Opcode::INR_D, { 1, "INR D" } },
		{ Opcode::INR_E, { 1, "INR E" } },
		{ Opcode::INR_H, { 1, "INR H" } },
		{ Opcode::INR_L, { 1, "INR L" } },
		{ Opcode::INR_M, { 1, "INR M" } },
		{ Opcode::INX_B, { 1, "INX B" } },
		{ Opcode::INX_D, { 1, "INX D" } },
		{ Opcode::INX_H, { 1, "INX H" } },
		{ Opcode::INX_SP, { 1, "INX SP" } },
		{ Opcode::JMP_a16, { 3, "JMP a16" } },
		{ Opcode::JZ_a16, { 3, "JZ a16" } },
		{ Opcode::JNZ_a16, { 3, "JNZ a16" } },
		{ Opcode::JP_a16, { 3, "JP a16" } },
		{ Opcode::JM_a16, { 3, "JM a16" } },
		{ Opcode::JC_a16, { 3, "JC a16" } },
		{ Opcode::JNC_a16, { 3, "JNC a16" } },
		{ Opcode::JPE_a16, { 3, "JPE a16" } },
		{ Opcode::JPO_a16, { 3, "JPO a16" } },
		{ Opcode::LDA_a16, { 3, "LDA a16" } },
		{ Opcode::LDAX_B, { 1, "LDAX B" } },
		{ Opcode::LDAX_D, { 1, "LDAX D" } },
		{ Opcode::LHLD_a16, { 3, "LHLD a16" } },
		{ Opcode::LXI_B_d16, { 3, "LXI B, d16" } },
		{ Opcode::LXI_D_d16, { 3, "LXI D, d16" } },
		{ Opcode::LXI_H_d16, { 3, "LXI H, d16" } },
		{ Opcode::LXI_SP_d16, { 3, "LXI SP, d16" } },
		{ Opcode::MOV_A_A, { 1, "MOV A, A" } },
		{ Opcode::MOV_A_B, { 1, "MOV A, B" } },
		{ Opcode::MOV_A_C, { 1, "MOV A, C" } },
		{ Opcode::MOV_A_D, { 1, "MOV A, D" } },
		{ Opcode::MOV_A_E, { 1, "MOV A, E" } },
		{ Opcode::MOV_A_H, { 1, "MOV A, H" } },
		{ Opcode::MOV_A_L, { 1, "MOV A, L" } },
		{ Opcode::MOV_A_M, { 1, "MOV A, M" } },
		{ Opcode::MOV_B_A, { 1, "MOV B, A" } },
		{ Opcode::MOV_B_B, { 1, "MOV B, B" } },
		{ Opcode::MOV_B_C, { 1, "MOV B, C" } },
		{ Opcode::MOV_B_D, { 1, "MOV B, D" } },
		{ Opcode::MOV_B_E, { 1, "MOV B, E" } },
		{ Opcode::MOV_B_H, { 1, "MOV B, H" } },
		{ Opcode::MOV_B_L, { 1, "MOV B, L" } },
		{ Opcode::MOV_B_M, { 1, "MOV B, M" } },
		{ Opcode::MOV_C_A, { 1, "MOV C, A" } },
		{ Opcode::MOV_C_B, { 1, "MOV C, B" } },
		{ Opcode::MOV_C_C, { 1, "MOV C, C" } },
		{ Opcode::MOV_C_D, { 1, "MOV C, D" } },
		{ Opcode::MOV_C_E, { 1, "MOV C, E" } },
		{ Opcode::MOV_C_H, { 1, "MOV C, H" } },
		{ Opcode::MOV_C_L, { 1, "MOV C, L" } },
		{ Opcode::MOV_C_M, { 1, "MOV C, M" } },
		{ Opcode::MOV_D_A, { 1, "MOV D, A" } },
		{ Opcode::MOV_D_B, { 1, "MOV D, B" } },
		{ Opcode::MOV_D_C, { 1, "MOV D, C" } },
		{ Opcode::MOV_D_D, { 1, "MOV D, D" } },
		{ Opcode::MOV_D_E, { 1, "MOV D, E" } },
		{ Opcode::MOV_D_H, { 1, "MOV D, H" } },
		{ Opcode::MOV_D_L, { 1, "MOV D, L" } },
		{ Opcode::MOV_D_M, { 1, "MOV D, M" } },
		{ Opcode::MOV_E_A, { 1, "MOV E, A" } },
		{ Opcode::MOV_E_B, { 1, "MOV E, B" } },
		{ Opcode::MOV_E_C, { 1, "MOV E, C" } },
		{ Opcode::MOV_E_D, { 1, "MOV E, D" } },
		{ Opcode::MOV_E_E, { 1, "MOV E, E" } },
		{ Opcode::MOV_E_H, { 1, "MOV E, H" } },
		{ Opcode::MOV_E_L, { 1, "MOV E, L" } },
		{ Opcode::MOV_E_M, { 1, "MOV E, M" } },
		{ Opcode::MOV_H_A, { 1, "MOV H, A" } },
		{ Opcode::MOV_H_B, { 1, "MOV H, B" } },
		{ Opcode::MOV_H_C, { 1, "MOV H, C" } },
		{ Opcode::MOV_H_D, { 1, "MOV H, D" } },
		{ Opcode::MOV_H_E, { 1, "MOV H, E" } },
		{ Opcode::MOV_H_H, { 1, "MOV H, H" } },
		{ Opcode::MOV_H_L, { 1, "MOV H, L" } },
		{ Opcode::MOV_H_M, { 1, "MOV H, M" } },
		{ Opcode::MOV_L_A, { 1, "MOV L, A" } },
		{ Opcode::MOV_L_B, { 1, "MOV L, B" } },
		{ Opcode::MOV_L_C, { 1, "MOV L, C" } },
		{ Opcode::MOV_L_D, { 1, "MOV L, D" } },
		{ Opcode::MOV_L_E, { 1, "MOV L, E" } },
		{ Opcode::MOV_L_H, { 1, "MOV L, H" } },
		{ Opcode::MOV_L_L, { 1, "MOV L, L" } },
		{ Opcode::MOV_L_M, { 1, "MOV L, M" } },
		{ Opcode::MOV_M_A, { 1, "MOV M, A" } },
		{ Opcode::MOV_M_B, { 1, "MOV M, B" } },
		{ Opcode::MOV_M_C, { 1, "MOV M, C" } },
		{ Opcode::MOV_M_D, { 1, "MOV M, D" } },
		{ Opcode::MOV_M_E, { 1, "MOV M, E" } },
		{ Opcode::MOV_M_H, { 1, "MOV M, H" } },
		{ Opcode::MOV_M_L, { 1, "MOV M, L" } },
		{ Opcode::MVI_A_d8, { 2, "MVI A, d8" } },
		{ Opcode::MVI_B_d8, { 2, "MVI B, d8" } },
		{ Opcode::MVI_C_d8, { 2, "MVI C, d8" } },
		{ Opcode::MVI_D_d8, { 2, "MVI D, d8" } },
		{ Opcode::MVI_E_d8, { 2, "MVI E, d8" } },
		{ Opcode::MVI_H_d8, { 2, "MVI H, d8" } },
		{ Opcode::MVI_L_d8, { 2, "MVI L, d8" } },
		{ Opcode::MVI_M_d8, { 2, "MVI M, d8" } },
		{ Opcode::NOP, { 1, "NOP" } },
		{ Opcode::ORA_A, { 1, "ORA A" } },
		{ Opcode::ORA_B, { 1, "ORA B" } },
		{ Opcode::ORA_C, { 1, "ORA C" } },
		{ Opcode::ORA_D, { 1, "ORA D" } },
		{ Opcode::ORA_E, { 1, "ORA E" } },
		{ Opcode::ORA_H, { 1, "ORA H" } },
		{ Opcode::ORA_L, { 1, "ORA L" } },
		{ Opcode::ORA_M, { 1, "ORA M" } },
		{ Opcode::ORI_d8, { 2, "ORI d8" } },
		{ Opcode::OUT_pp, { 2, "OUT pp" } },
		{ Opcode::PCHL, { 1, "PCHL" } },
		{ Opcode::POP_B, { 1, "POP B" } },
		{ Opcode::POP_D, { 1, "POP D" } },
		{ Opcode::POP_H, { 1, "POP H" } },
		{ Opcode::POP_PSW, { 1, "POP PSW" } },
		{ Opcode::PUSH_B, { 1, "PUSH B" } },
		{ Opcode::PUSH_D, { 1, "PUSH D" } },
		{ Opcode::PUSH_H, { 1, "PUSH H" } },
		{ Opcode::PUSH_PSW, { 1, "PUSH PSW" } },
		{ Opcode::RAL, { 1, "RAL" } },
		{ Opcode::RAR, { 1, "RAR" } },
		{ Opcode::RLC, { 1, "RLC" } },
		{ Opcode::RRC, { 1, "RRC" } },
		{ Opcode::RIM, { 1, "RIM" } },
		{ Opcode::RET, { 1, "RET" } },
		{ Opcode::RZ, { 1, "RZ" } },
		{ Opcode::RNZ, { 1, "RNZ" } },
		{ Opcode::RP, { 1, "RP" } },
		{ Opcode::RM, { 1, "RM" } },
		{ Opcode::RC, { 1, "RC" } },
		{ Opcode::RNC, { 1, "RNC" } },
		{ Opcode::RPE, { 1, "RPE" } },
		{ Opcode::RPO, { 1, "RPO" } },
		{ Opcode::RST_0, { 1, "RST0" } },
		{ Opcode::RST_1, { 1, "RST1" } },
		{ Opcode::RST_2, { 1, "RST2" } },
		{ Opcode::RST_3, { 1, "RST3" } },
		{ Opcode::RST_4, { 1, "RST4" } },
		{ Opcode::RST_5, { 1, "RST5" } },
		{ Opcode::RST_6, { 1, "RST6" } },
		{ Opcode::RST_7, { 1, "RST7" } },
		{ Opcode::SIM, { 1, "SIM" } },
		{ Opcode::SPHL, { 1, "SPHL" } },
		{ Opcode::SHLD_a16, { 3, "SHLD a16" } },
		{ Opcode::STA_a16, { 3, "STA a16" } },
		{ Opcode::STAX_B, { 1, "STAX B" } },
		{ Opcode::STAX_D, { 1, "STAX D" } },
		{ Opcode::STC, { 1, "STC" } },
		{ Opcode::SUB_A, { 1, "SUB A" } },
		{ Opcode::SUB_B, { 1, "SUB B" } },
		{ Opcode::SUB_C, { 1, "SUB C" } },
		{ Opcode::SUB_D, { 1, "SUB D" } },
		{ Opcode::SUB_E, { 1, "SUB E" } },
		{ Opcode::SUB_H, { 1, "SUB H" } },
		{ Opcode::SUB_L, { 1, "SUB L" } },
		{ Opcode::SUB_M, { 1, "SUB M" } },
		{ Opcode::SUI_d8, { 2, "SUI d8" } },
		{ Opcode::SBB_A, { 1, "SBB A" } },
		{ Opcode::SBB_B, { 1, "SBB B" } },
		{ Opcode::SBB_C, { 1, "SBB C" } },
		{ Opcode::SBB_D, { 1, "SBB D" } },
		{ Opcode::SBB_E, { 1, "SBB E" } },
		{ Opcode::SBB_H, { 1, "SBB H" } },
		{ Opcode::SBB_L, { 1, "SBB L" } },
		{ Opcode::SBB_M, { 1, "SBB M" } },
		{ Opcode::SBI_d8, { 2, "SBI d8" } },
		{ Opcode::XCHG, { 1, "XCHG" } },
		{ Opcode::XTHL, { 1, "XTHL" } },
		{ Opcode::XRA_A, { 1, "XRA A" } },
		{ Opcode::XRA_B, { 1, "XRA B" } },
		{ Opcode::XRA_C, { 1, "XRA C" } },
		{ Opcode::XRA_D, { 1, "XRA D" } },
		{ Opcode::XRA_E, { 1, "XRA E" } },
		{ Opcode::XRA_H, { 1, "XRA H" } },
		{ Opcode::XRA_L, { 1, "XRA L" } },
		{ Opcode::XRA_M, { 1, "XRA M" } },
		{ Opcode::XRI_d8, { 2, "XRI d8" } },
	};
}